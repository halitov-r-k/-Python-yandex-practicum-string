 String 
 
 Коллекция, элементами которой являются символы, составляющие строку.
 Строку, как и любую коллекцию, можно обрабатывать в цикле, извлекать из неё элементы или группы элементов и преобразовывать в другие типы коллекций.
Строку можно преобразовать в список или сет.

string_name = 'символы строки'
list_name = list(string_name)
set_name = set(string_name)
string_name2 = str(list_name)
string_name3 = str(set_name)

При создании сета:
из строки исключены дублирующиеся символы;
при печати элементы выводятся в случайном порядке.

Строка — упорядоченная коллекция.
К элементам строки (к буквам) можно обратиться по индексу, точно так же, как и к элементам списка.

Отрицательные индексы

Иногда бывает необходимо обратиться к элементам коллекции, начиная отсчёт с конца. 
В таких случаях применяют отрицательные индексы: 
последний элемент коллекции можно получить по индексу [-1], 
предпоследний — по индексу [-2], и так далее. 
Это касается и строк, и любых упорядоченных коллекций.

Разобрать строку на слова: метод split()

Строку можно разделить на слова или на другие фрагменты текста — и сохранить получившиеся подстроки в список. 
Это делает метод  split(). 
Для этого метода можно указать аргумент — разделитель, по которому строка будет разбита на части. 
Разделителем может быть цифра, буква, пробел или любой набор символов. 

list_name = sring_name.split(' ')

Чтобы разделить строку на слова — в качестве разделителя нужно указать пробел, это такой же символ, как буква или цифра.

Если аргументом метода split() будет пробел — то фраза, к которой будет применён этот метод, будет разбита на отдельные слова.

Если вызвать метод split() без аргументов, с пустыми скобками — он точно так же разобьёт строку по пробелам. 

Создать строку из коллекции: метод join()

Можно выполнить и обратную процедуру: «смонтировать» строку из элементов списка.
В получившейся строке можно разделить элементы исходного списка каким-нибудь текстовым символом или набором символов.
Эту операцию выполняет метод join().
Из элементов списка words_list создадим строку new_string и напечатаем её. 
Обратите внимание, у метода join() синтаксис отличается от split():
 метод применяется к строке-разделителю, 
 а список передаётся как аргумент метода.
Разделителем может быть любая строка:
какое-нибудь слово,
запятая с пробелом ', ', 
пробел ' ', 
а может быть «пустая строка» '' — кавычки, между которыми ничего нет, даже пробела. 

list_name = [word1, word2, ...]
string_name = ''.join(list_name)


